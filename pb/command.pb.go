// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/command.proto

package command

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_44263836b6ea8428, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type MessageSendRequest struct {
	WorkerId             string   `protobuf:"bytes,1,opt,name=workerId,proto3" json:"workerId,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageSendRequest) Reset()         { *m = MessageSendRequest{} }
func (m *MessageSendRequest) String() string { return proto.CompactTextString(m) }
func (*MessageSendRequest) ProtoMessage()    {}
func (*MessageSendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44263836b6ea8428, []int{1}
}

func (m *MessageSendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageSendRequest.Unmarshal(m, b)
}
func (m *MessageSendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageSendRequest.Marshal(b, m, deterministic)
}
func (m *MessageSendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageSendRequest.Merge(m, src)
}
func (m *MessageSendRequest) XXX_Size() int {
	return xxx_messageInfo_MessageSendRequest.Size(m)
}
func (m *MessageSendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageSendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageSendRequest proto.InternalMessageInfo

func (m *MessageSendRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *MessageSendRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type MessageIdRequest struct {
	MessageId            string   `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageIdRequest) Reset()         { *m = MessageIdRequest{} }
func (m *MessageIdRequest) String() string { return proto.CompactTextString(m) }
func (*MessageIdRequest) ProtoMessage()    {}
func (*MessageIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44263836b6ea8428, []int{2}
}

func (m *MessageIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageIdRequest.Unmarshal(m, b)
}
func (m *MessageIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageIdRequest.Marshal(b, m, deterministic)
}
func (m *MessageIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageIdRequest.Merge(m, src)
}
func (m *MessageIdRequest) XXX_Size() int {
	return xxx_messageInfo_MessageIdRequest.Size(m)
}
func (m *MessageIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageIdRequest proto.InternalMessageInfo

func (m *MessageIdRequest) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

type MessageResponse struct {
	Messages             []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MessageResponse) Reset()         { *m = MessageResponse{} }
func (m *MessageResponse) String() string { return proto.CompactTextString(m) }
func (*MessageResponse) ProtoMessage()    {}
func (*MessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_44263836b6ea8428, []int{3}
}

func (m *MessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageResponse.Unmarshal(m, b)
}
func (m *MessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageResponse.Marshal(b, m, deterministic)
}
func (m *MessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageResponse.Merge(m, src)
}
func (m *MessageResponse) XXX_Size() int {
	return xxx_messageInfo_MessageResponse.Size(m)
}
func (m *MessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessageResponse proto.InternalMessageInfo

func (m *MessageResponse) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type WorkerRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkerRequest) Reset()         { *m = WorkerRequest{} }
func (m *WorkerRequest) String() string { return proto.CompactTextString(m) }
func (*WorkerRequest) ProtoMessage()    {}
func (*WorkerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44263836b6ea8428, []int{4}
}

func (m *WorkerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkerRequest.Unmarshal(m, b)
}
func (m *WorkerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkerRequest.Marshal(b, m, deterministic)
}
func (m *WorkerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkerRequest.Merge(m, src)
}
func (m *WorkerRequest) XXX_Size() int {
	return xxx_messageInfo_WorkerRequest.Size(m)
}
func (m *WorkerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkerRequest proto.InternalMessageInfo

func (m *WorkerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkerRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *WorkerRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type WorkerResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkerResponse) Reset()         { *m = WorkerResponse{} }
func (m *WorkerResponse) String() string { return proto.CompactTextString(m) }
func (*WorkerResponse) ProtoMessage()    {}
func (*WorkerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_44263836b6ea8428, []int{5}
}

func (m *WorkerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkerResponse.Unmarshal(m, b)
}
func (m *WorkerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkerResponse.Marshal(b, m, deterministic)
}
func (m *WorkerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkerResponse.Merge(m, src)
}
func (m *WorkerResponse) XXX_Size() int {
	return xxx_messageInfo_WorkerResponse.Size(m)
}
func (m *WorkerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WorkerResponse proto.InternalMessageInfo

func (m *WorkerResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Message)(nil), "command.Message")
	proto.RegisterType((*MessageSendRequest)(nil), "command.MessageSendRequest")
	proto.RegisterType((*MessageIdRequest)(nil), "command.MessageIdRequest")
	proto.RegisterType((*MessageResponse)(nil), "command.MessageResponse")
	proto.RegisterType((*WorkerRequest)(nil), "command.WorkerRequest")
	proto.RegisterType((*WorkerResponse)(nil), "command.WorkerResponse")
}

func init() { proto.RegisterFile("pb/command.proto", fileDescriptor_44263836b6ea8428) }

var fileDescriptor_44263836b6ea8428 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0x4f, 0x4f, 0x02, 0x31,
	0x10, 0xc5, 0x5d, 0x57, 0x5d, 0x18, 0xfe, 0xb8, 0xe9, 0x41, 0x2b, 0x7a, 0x20, 0xf5, 0x42, 0x8c,
	0x41, 0x83, 0x77, 0x0d, 0x6a, 0x50, 0x62, 0xbc, 0x2c, 0x31, 0x9e, 0x0b, 0x9d, 0x10, 0x23, 0xbb,
	0x5d, 0xdb, 0x12, 0xc3, 0x37, 0xf2, 0x63, 0x9a, 0x2d, 0xed, 0xaa, 0x70, 0x31, 0xe1, 0x36, 0xf3,
	0x76, 0xe6, 0x37, 0xaf, 0x2f, 0x59, 0x88, 0xf3, 0xf1, 0xc5, 0x44, 0xa6, 0x29, 0xcf, 0x44, 0x37,
	0x57, 0xd2, 0x48, 0x12, 0xb9, 0x96, 0x9d, 0x42, 0xf4, 0x8c, 0x5a, 0xf3, 0x29, 0x12, 0x0a, 0x51,
	0xce, 0x17, 0x33, 0xc9, 0x05, 0x0d, 0xda, 0x41, 0xa7, 0x9e, 0xf8, 0x96, 0xdd, 0x02, 0x71, 0x43,
	0x23, 0xcc, 0x44, 0x82, 0x1f, 0x73, 0xd4, 0x86, 0xb4, 0xa0, 0xf2, 0x29, 0xd5, 0x3b, 0xaa, 0xe1,
	0x72, 0xa1, 0x9a, 0x94, 0x3d, 0x89, 0x21, 0x4c, 0xf5, 0x94, 0x6e, 0x5b, 0xb9, 0x28, 0xd9, 0x25,
	0xc4, 0x8e, 0x31, 0x2c, 0x09, 0x27, 0x50, 0x4d, 0xbd, 0xe6, 0x10, 0x3f, 0x02, 0xbb, 0x81, 0x7d,
	0xb7, 0x91, 0xa0, 0xce, 0x65, 0xa6, 0x91, 0x9c, 0x43, 0xc5, 0x7d, 0xd7, 0x34, 0x68, 0x87, 0x9d,
	0x5a, 0x2f, 0xee, 0xfa, 0x87, 0xf9, 0xd9, 0x72, 0x82, 0x3d, 0x41, 0xe3, 0xd5, 0x1a, 0xf2, 0xf7,
	0x08, 0xec, 0x64, 0x3c, 0x45, 0x77, 0xca, 0xd6, 0x85, 0xc6, 0x85, 0x50, 0xce, 0xaa, 0xad, 0x0b,
	0x2d, 0x97, 0xca, 0xd0, 0xb0, 0x1d, 0x74, 0x76, 0x13, 0x5b, 0xb3, 0x33, 0x68, 0x7a, 0x98, 0x33,
	0x43, 0x21, 0xd2, 0xf3, 0xc9, 0x04, 0xb5, 0xb6, 0xc0, 0x4a, 0xe2, 0xdb, 0xde, 0x57, 0x08, 0xd1,
	0xdd, 0xd2, 0x16, 0x19, 0x40, 0xad, 0x08, 0xcd, 0x87, 0x7c, 0xbc, 0xea, 0xf7, 0x57, 0xa2, 0x2d,
	0xba, 0xf6, 0x18, 0x77, 0x8b, 0x6d, 0x91, 0x01, 0x34, 0x46, 0x86, 0x9b, 0xb9, 0xf6, 0xa4, 0xa3,
	0xd5, 0xe1, 0xe1, 0xbf, 0x38, 0x0f, 0xd0, 0x7c, 0x7c, 0xd3, 0x46, 0xaa, 0xc5, 0x86, 0xa0, 0x6b,
	0xa8, 0xf6, 0x85, 0x58, 0x66, 0x42, 0x0e, 0xca, 0xc1, 0x3f, 0x89, 0xb7, 0x0e, 0xd7, 0xf4, 0x72,
	0xbf, 0x0f, 0xf5, 0x97, 0x5c, 0x70, 0x83, 0x1b, 0x21, 0xee, 0x71, 0x86, 0x1b, 0x20, 0xc6, 0x7b,
	0xf6, 0x7f, 0xb8, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x2e, 0x14, 0x6e, 0x23, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommandClient is the client API for Command service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommandClient interface {
	// Message
	SendMessage(ctx context.Context, in *MessageSendRequest, opts ...grpc.CallOption) (*MessageResponse, error)
	StatusMessage(ctx context.Context, in *MessageIdRequest, opts ...grpc.CallOption) (*MessageResponse, error)
	HistoryMessage(ctx context.Context, in *MessageIdRequest, opts ...grpc.CallOption) (*MessageResponse, error)
	// Worker
	AddWorker(ctx context.Context, in *WorkerRequest, opts ...grpc.CallOption) (*WorkerResponse, error)
	UpdateWorker(ctx context.Context, in *WorkerRequest, opts ...grpc.CallOption) (*WorkerResponse, error)
	DeleteWorker(ctx context.Context, in *WorkerRequest, opts ...grpc.CallOption) (*WorkerResponse, error)
}

type commandClient struct {
	cc *grpc.ClientConn
}

func NewCommandClient(cc *grpc.ClientConn) CommandClient {
	return &commandClient{cc}
}

func (c *commandClient) SendMessage(ctx context.Context, in *MessageSendRequest, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := c.cc.Invoke(ctx, "/command.Command/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) StatusMessage(ctx context.Context, in *MessageIdRequest, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := c.cc.Invoke(ctx, "/command.Command/StatusMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) HistoryMessage(ctx context.Context, in *MessageIdRequest, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := c.cc.Invoke(ctx, "/command.Command/HistoryMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) AddWorker(ctx context.Context, in *WorkerRequest, opts ...grpc.CallOption) (*WorkerResponse, error) {
	out := new(WorkerResponse)
	err := c.cc.Invoke(ctx, "/command.Command/AddWorker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) UpdateWorker(ctx context.Context, in *WorkerRequest, opts ...grpc.CallOption) (*WorkerResponse, error) {
	out := new(WorkerResponse)
	err := c.cc.Invoke(ctx, "/command.Command/UpdateWorker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) DeleteWorker(ctx context.Context, in *WorkerRequest, opts ...grpc.CallOption) (*WorkerResponse, error) {
	out := new(WorkerResponse)
	err := c.cc.Invoke(ctx, "/command.Command/DeleteWorker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommandServer is the server API for Command service.
type CommandServer interface {
	// Message
	SendMessage(context.Context, *MessageSendRequest) (*MessageResponse, error)
	StatusMessage(context.Context, *MessageIdRequest) (*MessageResponse, error)
	HistoryMessage(context.Context, *MessageIdRequest) (*MessageResponse, error)
	// Worker
	AddWorker(context.Context, *WorkerRequest) (*WorkerResponse, error)
	UpdateWorker(context.Context, *WorkerRequest) (*WorkerResponse, error)
	DeleteWorker(context.Context, *WorkerRequest) (*WorkerResponse, error)
}

func RegisterCommandServer(s *grpc.Server, srv CommandServer) {
	s.RegisterService(&_Command_serviceDesc, srv)
}

func _Command_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageSendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command.Command/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).SendMessage(ctx, req.(*MessageSendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_StatusMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).StatusMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command.Command/StatusMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).StatusMessage(ctx, req.(*MessageIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_HistoryMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).HistoryMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command.Command/HistoryMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).HistoryMessage(ctx, req.(*MessageIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_AddWorker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).AddWorker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command.Command/AddWorker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).AddWorker(ctx, req.(*WorkerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_UpdateWorker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).UpdateWorker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command.Command/UpdateWorker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).UpdateWorker(ctx, req.(*WorkerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_DeleteWorker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).DeleteWorker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command.Command/DeleteWorker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).DeleteWorker(ctx, req.(*WorkerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Command_serviceDesc = grpc.ServiceDesc{
	ServiceName: "command.Command",
	HandlerType: (*CommandServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _Command_SendMessage_Handler,
		},
		{
			MethodName: "StatusMessage",
			Handler:    _Command_StatusMessage_Handler,
		},
		{
			MethodName: "HistoryMessage",
			Handler:    _Command_HistoryMessage_Handler,
		},
		{
			MethodName: "AddWorker",
			Handler:    _Command_AddWorker_Handler,
		},
		{
			MethodName: "UpdateWorker",
			Handler:    _Command_UpdateWorker_Handler,
		},
		{
			MethodName: "DeleteWorker",
			Handler:    _Command_DeleteWorker_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/command.proto",
}
